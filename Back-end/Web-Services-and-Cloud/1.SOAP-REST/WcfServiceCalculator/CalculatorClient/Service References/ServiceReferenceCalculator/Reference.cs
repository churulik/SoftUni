//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CalculatorClient.ServiceReferenceCalculator {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceCalculator.IServiceCalculator")]
    public interface IServiceCalculator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCalculator/CalcDistance", ReplyAction="http://tempuri.org/IServiceCalculator/CalcDistanceResponse")]
        double CalcDistance(int startX, int startY, int endX, int endY);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCalculator/CalcDistance", ReplyAction="http://tempuri.org/IServiceCalculator/CalcDistanceResponse")]
        System.Threading.Tasks.Task<double> CalcDistanceAsync(int startX, int startY, int endX, int endY);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceCalculatorChannel : CalculatorClient.ServiceReferenceCalculator.IServiceCalculator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceCalculatorClient : System.ServiceModel.ClientBase<CalculatorClient.ServiceReferenceCalculator.IServiceCalculator>, CalculatorClient.ServiceReferenceCalculator.IServiceCalculator {
        
        public ServiceCalculatorClient() {
        }
        
        public ServiceCalculatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceCalculatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceCalculatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceCalculatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double CalcDistance(int startX, int startY, int endX, int endY) {
            return base.Channel.CalcDistance(startX, startY, endX, endY);
        }
        
        public System.Threading.Tasks.Task<double> CalcDistanceAsync(int startX, int startY, int endX, int endY) {
            return base.Channel.CalcDistanceAsync(startX, startY, endX, endY);
        }
    }
}
